name: End-to-end browser tests

on: [push, workflow_dispatch]

env:
  CI: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-20.04]
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2.1.5
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npm run bootstrap -- --ci
      - run: npm run build
      - name: Prepare browser-based end-to-end tests
        run: |
          cd packages/browser/examples/demoClientApp
          npm install
          cd ../../../../
      - name: Run browser-based end-to-end tests (Linux)
        # TODO: Add Edge/merge with Windows setup once Edge is available on Linux:
        # Connections are flakier in CI, so retry failed network requests with --retry-test-pages.
        # That also requires adding `--hostname localhost` to run over HTTPS:
        # https://testcafe.io/documentation/402638/reference/configuration-file#retrytestpages
        # Setting a test-specific user agent is only possible for Chrome: https://stackoverflow.com/a/59358925
        run: |
          cd e2e/browser
          npm ci
          npm run test -- "chrome:headless:userAgent='Browser-based solid-client-authn end-to-end tests running in CI. Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) $(chrome --version) Safari/537.36'" --screenshots takeOnFails=true,path=./e2e-browser-failures --retry-test-pages --hostname localhost
        # The Node version does not influence how well our tests run in the browser,
        # so we only need to test in one.
        # (But I've explicitly set it to *not* run in the oldest versions,
        # rather than running in the newest, so ensure that changing Node versions in CI
        # does not cause end-to-end tests to stop running.)
        # Additionally, Dependabot does not have access to our secrets,
        # so end-to-end tests for Dependabot PRs can only be manually started.
        # https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/
        if: github.actor != 'dependabot[bot]'
        env:
          E2E_DEMO_CLIENT_APP_URL: http://localhost:3001
          E2E_ESS_USERNAME: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_USER }}
          E2E_ESS_PASSWORD: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_PASSWORD }}
          E2E_NSS_USERNAME: ${{ secrets.E2E_NSS_USERNAME }}
          E2E_NSS_PASSWORD: ${{ secrets.E2E_NSS_PASSWORD }}
          E2E_TESTCAFE_WAIT_TIME: 20000
      - name: Archive browser-based end-to-end test failure screenshots, if any
        uses: actions/upload-artifact@v2.2.3
        continue-on-error: true
        if: failure()
        with:
          name: e2e-browser-failures
          path: e2e/browser/e2e-browser-failures
